{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, EDIT_TODO, FETCH_ALL_TODOS, SORT_UP, SORT_DOWN, FILTER_PRIORITY } from './types';\nconst initialState = {\n  todos: [],\n  history: []\n};\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return { ...state,\n        todos: [...action.payload],\n        history: [...action.payload]\n      };\n\n    case ADD_TODO:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todos: [...state.todos.filter(todo => todo.uuid != action.payload)]\n      };\n\n    case EDIT_TODO:\n      return { ...state,\n        todos: [...state.todos.map(todo => todo.uuid == action.payload.uuid ? action.payload : todo)]\n      };\n\n    case SORT_UP:\n      return { ...state,\n        todos: [...state.todos.sort((a, b) => a.id - b.id)]\n      };\n\n    case SORT_DOWN:\n      return { ...state,\n        todos: [...state.todos.sort((a, b) => b.id - a.id)]\n      };\n\n    case FILTER_PRIORITY:\n      return { ...state,\n        todos: [...state.history.filter(item => item.priority === action.payload)]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/redux/reducer.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","FETCH_ALL_TODOS","SORT_UP","SORT_DOWN","FILTER_PRIORITY","initialState","todos","history","todoAppReducer","state","action","type","payload","filter","todo","uuid","map","sort","a","b","id","item","priority"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,eAJF,EAKEC,OALF,EAMEC,SANF,EAOEC,eAPF,QAQO,SARP;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAKA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,YAAhC,EAA8CK,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX,CAFF;AAGLL,QAAAA,OAAO,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAHJ,OAAP;;AAMF,SAAKd,QAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AAEF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,IAAL,IAAaL,MAAM,CAACE,OAAjD,CAAJ;AAFF,OAAP;;AAKF,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAE,CACL,GAAGG,KAAK,CAACH,KAAN,CAAYU,GAAZ,CAAiBF,IAAD,IACjBA,IAAI,CAACC,IAAL,IAAaL,MAAM,CAACE,OAAP,CAAeG,IAA5B,GAAmCL,MAAM,CAACE,OAA1C,GAAoDE,IADnD,CADE;AAFF,OAAP;;AASF,SAAKZ,OAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAN,CAAYW,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,EAAF,GAAOD,CAAC,CAACC,EAApC,CAAJ;AAFF,OAAP;;AAKF,SAAKjB,SAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAN,CAAYW,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACC,EAAF,GAAOF,CAAC,CAACE,EAApC,CAAJ;AAFF,OAAP;;AAKF,SAAKhB,eAAL;AAEE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,KAAK,EAAE,CACL,GAAGG,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAsBQ,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBZ,MAAM,CAACE,OAAxD,CADE;AAFF,OAAP;;AAOF;AACE,aAAOH,KAAP;AAjDJ;AAmDD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  FETCH_ALL_TODOS,\n  SORT_UP,\n  SORT_DOWN,\n  FILTER_PRIORITY,\n} from './types';\n\nconst initialState = {\n  todos: [],\n  history: [],\n};\n\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return {\n        ...state,\n        todos: [...action.payload],\n        history: [...action.payload],\n      };\n\n    case ADD_TODO:\n      return { ...state, todos: [...state.todos, action.payload] };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos.filter((todo) => todo.uuid != action.payload)],\n      };\n\n    case EDIT_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.map((todo) =>\n            todo.uuid == action.payload.uuid ? action.payload : todo\n          ),\n        ],\n      };\n\n    case SORT_UP:\n      return {\n        ...state,\n        todos: [...state.todos.sort((a, b) => a.id - b.id)],\n      };\n\n    case SORT_DOWN:\n      return {\n        ...state,\n        todos: [...state.todos.sort((a, b) => b.id - a.id)],\n      };\n\n    case FILTER_PRIORITY:\n\n      return {\n        ...state,\n        todos: [\n          ...state.history.filter((item) => item.priority === action.payload),\n        ],\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}