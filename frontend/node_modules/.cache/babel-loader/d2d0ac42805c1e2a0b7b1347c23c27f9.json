{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/src/components/Weather.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { getCurrentWeather } from '../utils/api';\n\nconst Weather = () => {\n  // const dateBuild = (d) => {\n  //   let date = String(d);\n  //   return date.slice(4, 15);\n  // };\n  const [weather, setWeather] = useState({});\n  const [location, setLocation] = useState({\n    lat: null,\n    lon: ''\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => setLocation({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }));\n  }, []);\n  useEffect(() => {\n    if (location.lat !== '' && location.lon !== '') getCurrentWeather(location.lat, location.lon).then(result => {\n      setWeather(result);\n      console.log(result, weather);\n    });\n  }, [location]);\n  return /*#__PURE__*/React.createElement(WeatherStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != 'undefined' ? weather.main.temp > 18 ? 'App hot' : 'App cold' : 'App',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, weather.weather[0].main))) : '')));\n};\n\nconst WeatherStyled = styled.div``;\nexport default Weather;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/src/components/Weather.jsx"],"names":["React","useState","useEffect","styled","getCurrentWeather","Weather","weather","setWeather","location","setLocation","lat","lon","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","then","result","console","log","main","temp","name","sys","country","Math","round","WeatherStyled","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,iBAAT,QAAkC,cAAlC;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB;AACA;AACA;AACA;AAEA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC;AAAES,IAAAA,GAAG,EAAE,IAAP;AAAaC,IAAAA,GAAG,EAAE;AAAlB,GAAD,CAAxC;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IACvCN,WAAW,CAAC;AACVC,MAAAA,GAAG,EAAEK,QAAQ,CAACC,MAAT,CAAgBC,QADX;AAEVN,MAAAA,GAAG,EAAEI,QAAQ,CAACC,MAAT,CAAgBE;AAFX,KAAD,CADb;AAMD,GAPQ,EAON,EAPM,CAAT;AASAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAQ,CAACE,GAAT,KAAiB,EAAjB,IAAuBF,QAAQ,CAACG,GAAT,KAAiB,EAA5C,EACEP,iBAAiB,CAACI,QAAQ,CAACE,GAAV,EAAeF,QAAQ,CAACG,GAAxB,CAAjB,CAA8CQ,IAA9C,CAAoDC,MAAD,IAAY;AAC7Db,MAAAA,UAAU,CAACa,MAAD,CAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBd,OAApB;AACD,KAHD;AAIH,GANQ,EAMN,CAACE,QAAD,CANM,CAAT;AAQA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EACP,OAAOF,OAAO,CAACiB,IAAf,IAAuB,WAAvB,GACIjB,OAAO,CAACiB,IAAR,CAAaC,IAAb,GAAoB,EAApB,GACE,SADF,GAEE,UAHN,GAII,KANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,OAAOlB,OAAO,CAACiB,IAAf,IAAuB,WAAvB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGjB,OAAO,CAACmB,IADX,QACmBnB,OAAO,CAACoB,GAAR,CAAYC,OAD/B,CADF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IAAI,CAACC,KAAL,CAAWvB,OAAO,CAACiB,IAAR,CAAaC,IAAxB,CADH,UADF,eAIE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BlB,OAAO,CAACA,OAAR,CAAgB,CAAhB,EAAmBiB,IAA7C,CAJF,CAPF,CADD,GAgBC,EAlBJ,CATF,CADF,CADF;AAmCD,CA7DD;;AA+DA,MAAMO,aAAa,GAAG3B,MAAM,CAAC4B,GAAI,EAAjC;AAEA,eAAe1B,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { getCurrentWeather } from '../utils/api';\n\nconst Weather = () => {\n  // const dateBuild = (d) => {\n  //   let date = String(d);\n  //   return date.slice(4, 15);\n  // };\n\n  const [weather, setWeather] = useState({});\n  const [location, setLocation] = useState({ lat: null, lon: '' });\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) =>\n      setLocation({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      })\n    );\n  }, []);\n\n  useEffect(() => {\n    if (location.lat !== '' && location.lon !== '')\n      getCurrentWeather(location.lat, location.lon).then((result) => {\n        setWeather(result);\n        console.log(result, weather);\n      });\n  }, [location]);\n\n  return (\n    <WeatherStyled>\n      <div\n        className={\n          typeof weather.main != 'undefined'\n            ? weather.main.temp > 18\n              ? 'App hot'\n              : 'App cold'\n            : 'App'\n        }\n      >\n        <main>\n          <div className='search-container'></div>\n          {typeof weather.main != 'undefined' ? (\n            <div>\n              <div className='location-container'>\n                <div className='location'>\n                  {weather.name}, {weather.sys.country}\n                </div>\n                {/* <div className='date'> {dateBuild(new Date())}</div> */}\n              </div>\n              <div className='weather-container'>\n                <div className='temperature'>\n                  {Math.round(weather.main.temp)}Â°C\n                </div>\n                <div className='weather'>{weather.weather[0].main}</div>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n        </main>\n      </div>\n    </WeatherStyled>\n  );\n};\n\nconst WeatherStyled = styled.div``;\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}