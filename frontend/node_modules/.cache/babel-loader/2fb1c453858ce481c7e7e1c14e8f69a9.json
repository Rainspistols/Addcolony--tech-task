{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/TodoItem.jsx\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport DeleteButton from '../ui/DeleteButton';\nimport EditButton from '../ui/EditButton';\n\nconst TodoItem = ({\n  todo\n}) => {\n  const [titleValue, setTitleValue] = useState(todo.title);\n  const [descriptionValue, setDescriptionValue] = useState(todo.description);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const onEditClick = () => {\n    setIsEdit(true);\n  };\n\n  return /*#__PURE__*/React.createElement(TodoItemStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, isEdit ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \"TITLE: \", todo.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"DESCRIPTION: \", todo.description), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DeleteButton, {\n    id: todo.uuid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(EditButton, {\n    onClick: onEditClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst TodoItemStyled = styled.li`\n  font-size: 20px;\n  line-height: 20px;\n  margin-bottom: 10px;\n\n  display: flex;\n  justify-content: space-between;\n\n  .title {\n    font-weight: 600;\n    margin-bottom: 10px;\n  }\n\n  .content {\n    width: 70%;\n  }\n\n  .buttons {\n    width: 20%;\n    display: flex;\n    justify-content: space-around;\n  }\n`;\nexport default TodoItem;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/TodoItem.jsx"],"names":["React","useState","styled","DeleteButton","EditButton","TodoItem","todo","titleValue","setTitleValue","title","descriptionValue","setDescriptionValue","description","isEdit","setIsEdit","onEditClick","uuid","TodoItemStyled","li"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAACK,IAAI,CAACG,KAAN,CAA5C;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAACK,IAAI,CAACM,WAAN,CAAxD;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAEA,QAAMc,WAAW,GAAG,MAAM;AACxBD,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAFD;;AAIA,sBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,gBACL,uDACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADK,gBAKL,uDACE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BP,IAAI,CAACG,KAAlC,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBH,IAAI,CAACM,WAAtB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CANJ,CADF,eAeE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEN,IAAI,CAACU,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAED,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAfF,CADF;AAsBD,CA/BD;;AAiCA,MAAME,cAAc,GAAGf,MAAM,CAACgB,EAAG;;;;;;;;;;;;;;;;;;;;;;CAAjC;AAwBA,eAAeb,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport DeleteButton from '../ui/DeleteButton';\nimport EditButton from '../ui/EditButton';\n\nconst TodoItem = ({ todo }) => {\n  const [titleValue, setTitleValue] = useState(todo.title);\n  const [descriptionValue, setDescriptionValue] = useState(todo.description);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const onEditClick = () => {\n    setIsEdit(true);\n  };\n\n  return (\n    <TodoItemStyled>\n      <div className='content'>\n        {isEdit ? (\n          <>\n            <input type='text' />\n          </>\n        ) : (\n          <>\n            <p className='title'>TITLE: {todo.title}</p>\n            <p>DESCRIPTION: {todo.description}</p>\n            <hr />\n          </>\n        )}\n      </div>\n\n      <div className='buttons'>\n        <DeleteButton id={todo.uuid} />\n        <EditButton onClick={onEditClick} />\n      </div>\n    </TodoItemStyled>\n  );\n};\n\nconst TodoItemStyled = styled.li`\n  font-size: 20px;\n  line-height: 20px;\n  margin-bottom: 10px;\n\n  display: flex;\n  justify-content: space-between;\n\n  .title {\n    font-weight: 600;\n    margin-bottom: 10px;\n  }\n\n  .content {\n    width: 70%;\n  }\n\n  .buttons {\n    width: 20%;\n    display: flex;\n    justify-content: space-around;\n  }\n`;\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}