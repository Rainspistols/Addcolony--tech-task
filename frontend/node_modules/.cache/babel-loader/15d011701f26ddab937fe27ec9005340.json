{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/ui/Tooltip.jsx\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst Tooltip = ({\n  text,\n  children\n}) => {\n  const [inHover, setHover] = useState(false);\n\n  const toggleHover = () => {\n    setHover(inHover => !inHover);\n  };\n\n  return /*#__PURE__*/React.createElement(TooltipStyled, {\n    onMouseEnter: toggleHover,\n    onMouseLeave: toggleHover,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, children, inHover && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 19\n    }\n  }, text));\n};\n\nconst TooltipStyled = styled.div`\n  position: relative;\n  span {\n    position: absolute;\n    display: inline-block;\n    padding: 15px;\n    background: ${({\n  theme\n}) => theme.color.white};\n    border-radius: 5px;\n    color: ${({\n  theme\n}) => theme.color.black};\n    text-shadow: none;\n    left: 10px;\n    top: -10px;\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: 300;\n  }\n`;\nexport default Tooltip;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/ui/Tooltip.jsx"],"names":["React","useState","styled","Tooltip","text","children","inHover","setHover","toggleHover","TooltipStyled","div","theme","color","white","black"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACtC,QAAM,CAACC,OAAD,EAAUC,QAAV,IAAsBN,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMO,WAAW,GAAG,MAAM;AACxBD,IAAAA,QAAQ,CAAED,OAAD,IAAa,CAACA,OAAf,CAAR;AACD,GAFD;;AAGA,sBACE,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAEE,WAA7B;AAA0C,IAAA,YAAY,EAAEA,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,EAEGC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAP,CAFd,CADF;AAMD,CAXD;;AAaA,MAAMK,aAAa,GAAGP,MAAM,CAACQ,GAAI;;;;;;kBAMf,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYC,KAAM;;aAEtC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,KAAN,CAAYE,KAAM;;;;;;;;CAR9C;AAkBA,eAAeX,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst Tooltip = ({ text, children }) => {\n  const [inHover, setHover] = useState(false);\n  const toggleHover = () => {\n    setHover((inHover) => !inHover);\n  };\n  return (\n    <TooltipStyled onMouseEnter={toggleHover} onMouseLeave={toggleHover}>\n      {children}\n      {inHover && <span>{text}</span>}\n    </TooltipStyled>\n  );\n};\n\nconst TooltipStyled = styled.div`\n  position: relative;\n  span {\n    position: absolute;\n    display: inline-block;\n    padding: 15px;\n    background: ${({ theme }) => theme.color.white};\n    border-radius: 5px;\n    color: ${({ theme }) => theme.color.black};\n    text-shadow: none;\n    left: 10px;\n    top: -10px;\n    font-size: 14px;\n    line-height: 14px;\n    font-weight: 300;\n  }\n`;\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"module"}