{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/TodoHeader.jsx\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst TodoHeader = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [newTodoValue, setNewTodoValue] = useState('');\n  return /*#__PURE__*/React.createElement(TodoHeaderStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"TODO APE\"), /*#__PURE__*/React.createElement(InputStyled, {\n    type: \"text\",\n    placeholder: \"Search ...\",\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Search\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add-new-todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputStyled, {\n    type: \"text\",\n    placeholder: \"Add new todo ...\",\n    value: newTodoValue,\n    onChange: e => setNewTodoValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Add Todo\")));\n};\n\nconst TodoHeaderStyled = styled.div`\n  padding: 20px 20px 0;\n  font-size: 20px;\n  line-height: 20px;\n\n  .hero {\n    display: flex;\n    align-items: center;\n    font-weight: 700;\n    margin-bottom: 50px;\n\n    span {\n      white-space: nowrap;\n      margin-right: 20px;\n    }\n\n\n  }\n\n  .add-new-todo {\n    display: flex;\n    align-items: center;\n  }\n`;\nconst InputStyled = styled.input`\n  border-radius: 5px;\n  height: 50px;\n  padding: 0 20px;\n  margin-right: 20px;\n  border: 1px solid grey;\n  box-sizing: border-box;\n`;\nconst ButtonStyled = styled.button`\n    button {\n      height: 50px;\n      background: transparent;\n      padding: 0 20px;\n      border-radius: 5px;\n      border: 1px solid grey;\n    }\n`;\nexport default TodoHeader;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/TodoHeader.jsx"],"names":["React","useState","styled","TodoHeader","searchValue","setSearchValue","newTodoValue","setNewTodoValue","e","target","value","TodoHeaderStyled","div","InputStyled","input","ButtonStyled","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,KAAK,EAAEG,WAHT;AAIE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,cAAc,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,eAYE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,KAAK,EAAEJ,YAHT;AAIE,IAAA,QAAQ,EAAGE,CAAD,IAAOD,eAAe,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CAZF,CADF;AAwBD,CA5BD;;AA8BA,MAAMC,gBAAgB,GAAGT,MAAM,CAACU,GAAI;;;;;;;;;;;;;;;;;;;;;;;CAApC;AAyBA,MAAMC,WAAW,GAAGX,MAAM,CAACY,KAAM;;;;;;;CAAjC;AAUA,MAAMC,YAAY,GAAGb,MAAM,CAACc,MAAO;;;;;;;;CAAnC;AAUA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\n\nconst TodoHeader = () => {\n  const [searchValue, setSearchValue] = useState('');\n  const [newTodoValue, setNewTodoValue] = useState('');\n\n  return (\n    <TodoHeaderStyled>\n      <div className='hero'>\n        <span>TODO APE</span>\n        <InputStyled\n          type='text'\n          placeholder='Search ...'\n          value={searchValue}\n          onChange={(e) => setSearchValue(e.target.value)}\n        />\n        <button>Search</button>\n      </div>\n\n      <div className='add-new-todo'>\n        <InputStyled\n          type='text'\n          placeholder='Add new todo ...'\n          value={newTodoValue}\n          onChange={(e) => setNewTodoValue(e.target.value)}\n        />\n        <button>Add Todo</button>\n      </div>\n    </TodoHeaderStyled>\n  );\n};\n\nconst TodoHeaderStyled = styled.div`\n  padding: 20px 20px 0;\n  font-size: 20px;\n  line-height: 20px;\n\n  .hero {\n    display: flex;\n    align-items: center;\n    font-weight: 700;\n    margin-bottom: 50px;\n\n    span {\n      white-space: nowrap;\n      margin-right: 20px;\n    }\n\n\n  }\n\n  .add-new-todo {\n    display: flex;\n    align-items: center;\n  }\n`;\n\nconst InputStyled = styled.input`\n  border-radius: 5px;\n  height: 50px;\n  padding: 0 20px;\n  margin-right: 20px;\n  border: 1px solid grey;\n  box-sizing: border-box;\n`;\n\n\nconst ButtonStyled = styled.button`\n    button {\n      height: 50px;\n      background: transparent;\n      padding: 0 20px;\n      border-radius: 5px;\n      border: 1px solid grey;\n    }\n`\n\nexport default TodoHeader;\n"]},"metadata":{},"sourceType":"module"}