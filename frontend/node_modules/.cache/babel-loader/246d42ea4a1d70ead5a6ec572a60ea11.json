{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/src/components/Weather.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { getCurrentWeather } from '../utils/api';\n\nconst Weather = () => {\n  // const dateBuild = (d) => {\n  //   let date = String(d);\n  //   return date.slice(4, 15);\n  // };\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [location, setLocation] = useState({});\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => setLocation({\n      lat: position.coords.latitude,\n      lon: position.coords.longitude\n    }));\n    console.log();\n  }, []);\n\n  const search = e => {\n    if (e.key === 'Enter') {\n      getCurrentWeather(query).then(result => {\n        setQuery('');\n        setWeather(result);\n        console.log(result, query, weather);\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(WeatherStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: typeof weather.main != 'undefined' ? weather.main.temp > 18 ? 'App hot' : 'App cold' : 'App',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    className: \"search-bar\",\n    onChange: e => setQuery(e.target.value),\n    value: query,\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })), typeof weather.main != 'undefined' ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, weather.name, \", \", weather.sys.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, Math.round(weather.main.temp), \"\\xB0C\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"weather\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, weather.weather[0].main))) : '')));\n};\n\nconst WeatherStyled = styled.div``;\nexport default Weather;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/src/components/Weather.jsx"],"names":["React","useState","useEffect","styled","getCurrentWeather","Weather","query","setQuery","weather","setWeather","location","setLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","console","log","search","e","key","then","result","main","temp","target","value","name","sys","country","Math","round","WeatherStyled","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport { getCurrentWeather } from '../utils/api';\n\nconst Weather = () => {\n  // const dateBuild = (d) => {\n  //   let date = String(d);\n  //   return date.slice(4, 15);\n  // };\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [location, setLocation] = useState({});\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) =>\n      setLocation({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude,\n      })\n    );\n    console.log()\n  }, []);\n\n  const search = (e) => {\n    if (e.key === 'Enter') {\n      getCurrentWeather(query).then((result) => {\n        setQuery('');\n        setWeather(result);\n        console.log(result, query, weather);\n      });\n    }\n  };\n\n  return (\n    <WeatherStyled>\n      <div\n        className={\n          typeof weather.main != 'undefined'\n            ? weather.main.temp > 18\n              ? 'App hot'\n              : 'App cold'\n            : 'App'\n        }\n      >\n        <main>\n          <div className='search-container'>\n            <input\n              type='text'\n              placeholder='Search...'\n              className='search-bar'\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n          {typeof weather.main != 'undefined' ? (\n            <div>\n              <div className='location-container'>\n                <div className='location'>\n                  {weather.name}, {weather.sys.country}\n                </div>\n                {/* <div className='date'> {dateBuild(new Date())}</div> */}\n              </div>\n              <div className='weather-container'>\n                <div className='temperature'>\n                  {Math.round(weather.main.temp)}Â°C\n                </div>\n                <div className='weather'>{weather.weather[0].main}</div>\n              </div>\n            </div>\n          ) : (\n            ''\n          )}\n        </main>\n      </div>\n    </WeatherStyled>\n  );\n};\n\nconst WeatherStyled = styled.div``;\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}