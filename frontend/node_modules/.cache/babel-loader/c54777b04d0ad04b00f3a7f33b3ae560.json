{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, EDIT_TODO, COMPLETE_TODO, IS_EDIT_TODO, FETCH_ALL_TODOS, SORT_UP, SORT_DOWN } from './types';\nconst initialState = {\n  todos: []\n};\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return { ...state,\n        todos: [...action.payload]\n      };\n\n    case ADD_TODO:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todos: [...state.todos.filter(todo => todo.uuid != action.payload)]\n      };\n\n    case EDIT_TODO:\n      return { ...state,\n        todos: [...state.todos.map(todo => todo.uuid == action.payload.uuid ? action.payload : todo)]\n      };\n\n    case SORT_UP:\n      return { ...state,\n        todos: [...state.todos.sort((a, b) => a.index - b.index)]\n      };\n\n    case SORT_DOWN:\n      return { ...state,\n        todos: [...state.todos.sort((a, b) => a.index - b.index)]\n      };\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/redux/reducer.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","IS_EDIT_TODO","FETCH_ALL_TODOS","SORT_UP","SORT_DOWN","initialState","todos","todoAppReducer","state","action","type","payload","filter","todo","uuid","map","sort","a","b","index"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,eANF,EAOEC,OAPF,EAQEC,SARF,QASO,SATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGH,YAAhC,EAA8CI,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGG,MAAM,CAACE,OAAX;AAAnB,OAAP;;AAEF,SAAKd,QAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBG,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AAEF,SAAKb,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,IAAL,IAAaL,MAAM,CAACE,OAAjD,CAAJ;AAFF,OAAP;;AAKF,SAAKZ,SAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,KAAK,EAAE,CACL,GAAGE,KAAK,CAACF,KAAN,CAAYS,GAAZ,CAAiBF,IAAD,IACjBA,IAAI,CAACC,IAAL,IAAaL,MAAM,CAACE,OAAP,CAAeG,IAA5B,GAAmCL,MAAM,CAACE,OAA1C,GAAoDE,IADnD,CADE;AAFF,OAAP;;AASF,SAAKV,OAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYU,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAvC,CAAJ;AAFF,OAAP;;AAKF,SAAKf,SAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYU,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAvC,CAAJ;AAFF,OAAP;AAKF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOX,KAAP;AAxDJ;AA0DD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  IS_EDIT_TODO,\n  FETCH_ALL_TODOS,\n  SORT_UP,\n  SORT_DOWN,\n} from './types';\n\nconst initialState = {\n  todos: [],\n};\n\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return { ...state, todos: [...action.payload] };\n\n    case ADD_TODO:\n      return { ...state, todos: [...state.todos, action.payload] };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos.filter((todo) => todo.uuid != action.payload)],\n      };\n\n    case EDIT_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.map((todo) =>\n            todo.uuid == action.payload.uuid ? action.payload : todo\n          ),\n        ],\n      };\n\n    case SORT_UP:\n      return {\n        ...state,\n        todos: [...state.todos.sort((a, b) => a.index - b.index)],\n      };\n\n    case SORT_DOWN:\n      return {\n        ...state,\n        todos: [...state.todos.sort((a, b) => a.index - b.index)],\n      };\n\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}