{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, EDIT_TODO, COMPLETE_TODO, IS_EDIT_TODO, FETCH_ALL_TODOS } from './types';\nexport default function todoAppReducer(state = todo, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return [...state, { ...action.payload\n      }];\n\n    case ADD_TODO:\n      return [...state, { ...action.payload\n      }];\n    // case ADD_TODO:\n    //   const equals = state.filter(\n    //     (item) => item.content === action.payload.content\n    //   );\n    //   if (!equals.length && action.payload.content) {\n    //     return [\n    //       ...state,\n    //       {\n    //         id: action.payload.id,\n    //         content: action.payload.content,\n    //         completed: false,\n    //         editable: false,\n    //       },\n    //     ];\n    //   }\n    //   return state;\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/redux/reducer.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","IS_EDIT_TODO","FETCH_ALL_TODOS","todoAppReducer","state","todo","action","type","payload"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,eANF,QAOO,SAPP;AASA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGC,IAAhC,EAAsCC,MAAtC,EAA8C;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,eAAL;AACE,aAAO,CAAC,GAAGE,KAAJ,EAAW,EAAE,GAAGE,MAAM,CAACE;AAAZ,OAAX,CAAP;;AAEF,SAAKX,QAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAW,EAAE,GAAGE,MAAM,CAACE;AAAZ,OAAX,CAAP;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOJ,KAAP;AA5CJ;AA8CD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  IS_EDIT_TODO,\n  FETCH_ALL_TODOS,\n} from './types';\n\nexport default function todoAppReducer(state = todo, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return [...state, { ...action.payload }];\n\n    case ADD_TODO:\n      return [...state, { ...action.payload }];\n\n    // case ADD_TODO:\n    //   const equals = state.filter(\n    //     (item) => item.content === action.payload.content\n    //   );\n    //   if (!equals.length && action.payload.content) {\n    //     return [\n    //       ...state,\n    //       {\n    //         id: action.payload.id,\n    //         content: action.payload.content,\n    //         completed: false,\n    //         editable: false,\n    //       },\n    //     ];\n    //   }\n    //   return state;\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}