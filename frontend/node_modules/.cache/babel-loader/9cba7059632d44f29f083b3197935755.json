{"ast":null,"code":"var _jsxFileName = \"/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/AddNewTodo.jsx\";\nimport React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Button from '../ui/Button';\n\nconst AddNewTodo = () => {\n  const [newTodoValue, setNewTodoValue] = useState('');\n  const [isNewTodoActive, setIsTodoActive] = useState(false);\n  return /*#__PURE__*/React.createElement(AddNewTodoStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, isNewTodoActive ? null : /*#__PURE__*/React.createElement(\"input\", {\n    className: \"addNewInput\",\n    type: \"text\",\n    placeholder: \"Add new todo ...\",\n    value: newTodoValue,\n    onChange: e => setNewTodoValue(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Add Todo\"));\n};\n\nconst AddNewTodoStyled = styled.div`\n  ${({\n  theme\n}) => theme.flex.between};\n\n  input {\n    ${({\n  theme\n}) => theme.input};\n  }\n`;\nexport default AddNewTodo;","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/components/AddNewTodo.jsx"],"names":["React","useState","styled","Button","AddNewTodo","newTodoValue","setNewTodoValue","isNewTodoActive","setIsTodoActive","e","target","value","AddNewTodoStyled","div","theme","flex","between","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACM,eAAD,EAAkBC,eAAlB,IAAqCP,QAAQ,CAAC,KAAD,CAAnD;AAIA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,eAAe,GAAG,IAAH,gBACd;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,KAAK,EAAEF,YAJT;AAKE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,eAAe,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CALlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAYE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF;AAgBD,CAtBD;;AAwBA,MAAMC,gBAAgB,GAAGV,MAAM,CAACW,GAAI;IAChC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,IAAN,CAAWC,OAAQ;;;MAGhC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACG,KAAM;;CAJjC;AAQA,eAAeb,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from '@emotion/styled';\nimport Button from '../ui/Button';\n\nconst AddNewTodo = () => {\n  const [newTodoValue, setNewTodoValue] = useState('');\n  const [isNewTodoActive, setIsTodoActive] = useState(false);\n\n\n\n  return (\n    <AddNewTodoStyled>\n      {isNewTodoActive ? null : (\n        <input\n          className='addNewInput'\n          type='text'\n          placeholder='Add new todo ...'\n          value={newTodoValue}\n          onChange={(e) => setNewTodoValue(e.target.value)}\n          \n        />\n      )}\n\n      <Button>Add Todo</Button>\n    </AddNewTodoStyled>\n  );\n};\n\nconst AddNewTodoStyled = styled.div`\n  ${({ theme }) => theme.flex.between};\n\n  input {\n    ${({ theme }) => theme.input};\n  }\n`;\n\nexport default AddNewTodo;\n"]},"metadata":{},"sourceType":"module"}