{"ast":null,"code":"import { ADD_TODO, DELETE_TODO, EDIT_TODO, COMPLETE_TODO, IS_EDIT_TODO, FETCH_ALL_TODOS } from './types';\nconst initialState = {\n  todos: [],\n  is\n};\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return { ...state,\n        todos: [...action.payload]\n      };\n\n    case ADD_TODO:\n      return { ...state,\n        todos: [...state.todos, action.payload]\n      };\n\n    case DELETE_TODO:\n      return { ...state,\n        todos: [...state.todos.filter(todo => todo.uuid != action.payload)]\n      };\n\n    case EDIT_TODO:\n      return { ...state,\n        todos: [...state.todos.map(todo => todo.uuid === action.payload.uuid ? action.paload : todo)]\n      };\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/tata/Documents/Max/my projects/ReactJs/Training/test--addcolony/frontend/src/redux/reducer.js"],"names":["ADD_TODO","DELETE_TODO","EDIT_TODO","COMPLETE_TODO","IS_EDIT_TODO","FETCH_ALL_TODOS","initialState","todos","is","todoAppReducer","state","action","type","payload","filter","todo","uuid","map","paload"],"mappings":"AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,aAJF,EAKEC,YALF,EAMEC,eANF,QAOO,SAPP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA;AAFmB,CAArB;AAKA,eAAe,SAASC,cAAT,CAAwBC,KAAK,GAAGJ,YAAhC,EAA8CK,MAA9C,EAAsD;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYH,QAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACE,OAAX;AAAnB,OAAP;;AAEF,SAAKb,QAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAYH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAV,EAAiBI,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AAEF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELH,QAAAA,KAAK,EAAE,CAAC,GAAGG,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,IAAL,IAAaL,MAAM,CAACE,OAAjD,CAAJ;AAFF,OAAP;;AAKF,SAAKX,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,KAAK,EAAE,CACL,GAAGG,KAAK,CAACH,KAAN,CAAYU,GAAZ,CAAiBF,IAAD,IACjBA,IAAI,CAACC,IAAL,KAAcL,MAAM,CAACE,OAAP,CAAeG,IAA7B,GAAoCL,MAAM,CAACO,MAA3C,GAAoDH,IADnD,CADE;AAFF,OAAP;AASF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACE,aAAOL,KAAP;AA5CJ;AA8CD","sourcesContent":["import {\n  ADD_TODO,\n  DELETE_TODO,\n  EDIT_TODO,\n  COMPLETE_TODO,\n  IS_EDIT_TODO,\n  FETCH_ALL_TODOS,\n} from './types';\n\nconst initialState = {\n  todos: [],\n  is\n};\n\nexport default function todoAppReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_ALL_TODOS:\n      return { ...state, todos: [...action.payload] };\n\n    case ADD_TODO:\n      return { ...state, todos: [...state.todos, action.payload] };\n\n    case DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos.filter((todo) => todo.uuid != action.payload)],\n      };\n\n    case EDIT_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.map((todo) =>\n            todo.uuid === action.payload.uuid ? action.paload : todo\n          ),\n        ],\n      };\n\n    // case DELETE_TODO:\n    //   return state.filter((item) => item.id !== action.payload.id);\n    // case IS_EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, editable: !item.editable }\n    //       : item\n    //   );\n    // case EDIT_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, content: action.payload.content }\n    //       : item\n    //   );\n    // case COMPLETE_TODO:\n    //   return state.map((item) =>\n    //     item.id === action.payload.id\n    //       ? { ...item, completed: !item.completed }\n    //       : item\n    //   );\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}